# @package _global_

defaults:
  - override /datamodule: car-segmentation
  - override /lightning_module/loss: u2net-matting
  - override /lightning_module/optimizer: adam
  - override /lightning_module/model: u2net
  - override /lightning_module/metrics: classification
  - override /logger: null
  - override /mode: debug

lightning_module:
  _target_: src.lightning_modules.u2net.U2NetModule

trainer:
  min_epochs: 1
  max_epochs: 10
  gradient_clip_val: 0.5
  callbacks:
    - _target_: pytorch_lightning.callbacks.ModelCheckpoint
      monitor: "val_loss" # name of the logged metric which determines when model is improving
      mode: "max" # "max" means higher metric value is better, can be also "min"
      save_top_k: 3 # save k best models (determined by above metric)
      save_last: True # additionaly always save model from last epoch
      verbose: False
      dirpath: "checkpoints/"
      filename: "epoch_{epoch:03d}"
      auto_insert_metric_name: False
  logger:
    _target_: pytorch_lightning.loggers.WandbLogger
    project: U2Net-car

exp_name: "u2net_test"
data_dir: ${work_dir}/data/demo
